{{- if .Values.worker.enabled  }}
{{- if .Values.secrets.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    description: |
      A Role that allows the secret generator below to create secrets for Concourse web and worker nodes.
  name: secrets-generator
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - get
  - create
  - update
  - delete
  - patch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secrets-generator
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
  name: secrets-generator
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secrets-generator
subjects:
- kind: ServiceAccount
  name: secrets-generator
  namespace: {{ .Release.Namespace }}

---
# This Job will patch the web and worker secrets in order to add 
# key and ssh keys for 
apiVersion: batch/v1
kind: Job
metadata:
  name: secrets-generator-{{ .Release.Revision }}
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      serviceAccountName: secrets-generator
      restartPolicy: OnFailure
      initContainers:
      - name: generator
        image: concourse/concourse
        imagePullPolicy: Always
        command:
        - /bin/bash
        - -c
        - |
          /usr/local/concourse/bin/concourse generate-key -t rsa -f ./secrets/session-signing-key
          /usr/local/concourse/bin/concourse generate-key -t ssh -f ./secrets/host-key
          /usr/local/concourse/bin/concourse generate-key -t ssh -f ./secrets/worker-key

        volumeMounts:
          - name: secrets
            mountPath: /secrets
      containers:
      - name: secret-creator 
        image: bitnami/kubectl
        imagePullPolicy: Always
        env:
          - name: WORKER_SECRET_NAME
            value: {{ template "concourse.worker.fullname" . }}
          - name: WEB_SECRET_NAME
            value: {{ template "concourse.web.fullname" . }}
          - name: SECRET_NAMESPACE
            value: {{ .Release.Namespace }}
        command:
        - /bin/bash
        - -c
        - |
          HOST_KEY_PUB=$(awk '{printf "%s\\n", $0}' secrets/host-key.pub)
          WORKER_KEY=$(awk '{printf "%s\\n", $0}' secrets/worker-key)
          kubectl patch secret -n ${SECRET_NAMESPACE} ${WORKER_SECRET_NAME} -p "{\"stringData\":{\"host-key-pub\":\"${HOST_KEY_PUB}\"}}"
          kubectl patch secret -n ${SECRET_NAMESPACE} ${WORKER_SECRET_NAME} -p "{\"stringData\":{\"worker-key\":\"${WORKER_KEY}\"}}"

          SESSION_SIGNING_KEY=$(awk '{printf "%s\\n", $0}' secrets/session-signing-key)
          WORKER_KEY_PUB=$(awk '{printf "%s\\n", $0}' secrets/worker-key.pub)
          HOST_KEY=$(awk '{printf "%s\\n", $0}' secrets/host-key)
          kubectl patch secret -n ${SECRET_NAMESPACE} ${WEB_SECRET_NAME} -p "{\"stringData\":{\"host-key\":\"${HOST_KEY}\"}}"
          kubectl patch secret -n ${SECRET_NAMESPACE} ${WEB_SECRET_NAME} -p "{\"stringData\":{\"session-signing-key\":\"${SESSION_SIGNING_KEY}\"}}"
          kubectl patch secret -n ${SECRET_NAMESPACE} ${WEB_SECRET_NAME} -p "{\"stringData\":{\"worker-key-pub\":\"${WORKER_KEY_PUB}\"}}"

        volumeMounts:
          - name: secrets
            mountPath: /secrets
      volumes:
        - name: secrets
          emptyDir: {}
{{- end }}
{{- end }}

{{- if .Values.web.enabled  }}
{{- if .Values.secrets.create }}

{{- end }}
{{- end }}
