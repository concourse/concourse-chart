{{- if .Values.worker.enabled -}}
{{- if eq .Values.worker.kind "Deployment" }}
apiVersion: {{ template "concourse.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "concourse.worker.fullname" . }}
  labels:
    app: {{ template "concourse.worker.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app: {{ template "concourse.worker.fullname" . }}
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: {{ template "concourse.worker.fullname" . }}
        release: "{{ .Release.Name }}"
        {{- with .Values.worker.labels }}
{{ toYaml . | trim | indent 8 }}
        {{- end }}
      {{- if .Values.worker.annotations }}
      annotations:
{{ toYaml .Values.worker.annotations | indent 8 }}
      {{- end }}
    spec:
    {{- if .Values.worker.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.worker.nodeSelector | indent 8 }}
    {{- end }}
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "concourse.worker.fullname" . }}{{ else }}{{ .Values.rbac.workerServiceAccountName }}{{ end }}
      {{- if .Values.worker.tolerations }}
      tolerations:
{{ toYaml .Values.worker.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.worker.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.worker.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
      {{- if .Values.worker.extraInitContainers }}
      {{- toYaml .Values.worker.extraInitContainers | nindent 8 }}
      {{- end }}
      containers:
      {{- if .Values.worker.sidecarContainers }}
      {{- toYaml .Values.worker.sidecarContainers | nindent 8 }}
      {{- end }}
        - name: {{ template "concourse.worker.fullname" . }}
          {{- if .Values.imageDigest }}
          image: "{{ .Values.image }}@{{ .Values.imageDigest }}"
          {{- else }}
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          args:
            - worker
{{- if .Values.worker.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.worker.livenessProbe | indent 12 }}
{{- end }}
{{- if .Values.worker.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.worker.readinessProbe | indent 12 }}
{{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                  - "/bin/bash"
                  - "/pre-stop-hook.sh"
          env: 
{{- include "concourse.worker.env" . | indent 12 }}
{{- if .Values.worker.env }}
{{ toYaml .Values.worker.env | indent 12 }}
{{- end }}
          ports:
            - name: worker-hc
              containerPort: {{ .Values.concourse.worker.healthcheckBindPort }}
{{- if .Values.worker.resources }}
          resources:
{{ toYaml .Values.worker.resources | indent 12 }}
{{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: concourse-keys
              mountPath: {{ .Values.worker.keySecretsPath | quote }}
              readOnly: true
            - name: pre-stop-hook
              mountPath: /pre-stop-hook.sh
              subPath: pre-stop-hook.sh

{{- if .Values.worker.additionalVolumeMounts }}
{{ toYaml .Values.worker.additionalVolumeMounts | indent 12 }}
{{- end }}
      affinity:
{{- if .Values.worker.additionalAffinities }}
{{ toYaml .Values.worker.additionalAffinities | indent 8 }}
{{- end }}
        podAntiAffinity:
          {{- if .Values.worker.hardAntiAffinity }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
{{- if .Values.worker.hardAntiAffinityLabels }}
{{ toYaml .Values.worker.hardAntiAffinityLabels | indent 16 }}
{{- else }}
                app: {{ template "concourse.worker.fullname" . }}
                release: {{ .Release.Name | quote }}
{{- end }}
            topologyKey: kubernetes.io/hostname
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "concourse.worker.fullname" . }}
                  release: {{ .Release.Name | quote }}
          {{- end }}
      volumes:
{{- if .Values.worker.additionalVolumes }}
{{ toYaml .Values.worker.additionalVolumes | indent 8 }}
{{- end }}
        - name: pre-stop-hook
          configMap:
            name: {{ template "concourse.worker.fullname" . }}
        - name: concourse-keys
          secret:
            secretName: {{ template "concourse.worker.fullname" . }}
            defaultMode: 0400
            items:
              - key: host-key-pub
                path: host_key.pub
              - key: worker-key
                path: worker_key
      {{- if semverCompare "^1.7-0" .Capabilities.KubeVersion.GitVersion }}
  strategy:
{{ toYaml .Values.worker.updateStrategy | indent 4 }}
      {{- end }}
{{- end }}
{{- end }}
